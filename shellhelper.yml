shellhelper:
   images:
      apps >
         wlanboy/serviceconfig:latest
         wlanboy/simpleservice:latest
         wlanboy/elasticaudit:latest
         wlanboy/mirrorservice:latest
         wlanboy/crudservice:latest
         wlanboy/bootadmin:latest
         wlanboy/servicelogs:latest
         wlanboy/cloudtask:latest
      infra >
         postgres:11.4-alpine
         mongo:4.1.13-bionic
         docker.elastic.co/elasticsearch/elasticsearch:6.2.3
         docker.elastic.co/logstash/logstash:6.2.3
         docker.elastic.co/kibana/kibana:6.2.3
         confluentinc/cp-zookeeper:4.1.3
         confluentinc/cp-kafka:4.1.3
   commands:
      network >
         docker network create spring-net
         docker network create kafka
      apps >
         docker run --name cloudconfig -m 256M -d -p 8888:8888 --network spring-net -v /tmp:/tmp --restart unless-stopped wlanboy/serviceconfig:latest
         docker run --name simpleservice -m 256M -d -p 8201:8201 --network spring-net -v /tmp:/tmp wlanboy/simpleservice:latest
         docker run --name elasticaudit -m 256M -d -p 8030:8030 --network spring-net -v /tmp:/tmp wlanboy/elasticaudit:latest
         docker run --name mirrorservice -m 256M -d -p 8003:8003 --network spring-net -v /tmp:/tmp wlanboy/mirrorservice:latest
         docker run --name crudservice -m 256M -d -p 8002:8002 --network spring-net -v /tmp:/tmp wlanboy/crudservice:latest
         docker run --name bootadmin -m 256M -d -p 9080:9080 --network spring-net -v /tmp:/tmp wlanboy/bootadmin:latest
         docker run --name servicelogs -m 256M -d -p 9411:9411 --network spring-net -v /tmp:/tmp wlanboy/servicelogs:latest
         docker run --name cloudtask -m 256M -d -p 8101:8101 --network spring-net -v /tmp:/tmp wlanboy/cloudtask:latest
      infra >
         docker run --name postgres -d -p 5432:5432 -v /postgres:/var/lib/postgresql/data -v /home/samuel/postgres.sql:/docker-entrypoint-initdb.d/init.sql -e POSTGRES_PASSWORD=spring -e POSTGRES_USER=spring -e POSTGRES_DB=spring postgres:11.4-alpine
         docker run --name mongodb -p 27017:27017 -v /mongodb:/data/db -e MONGO_INITDB_ROOT_USERNAME=spring -e MONGO_INITDB_ROOT_PASSWORD=spring -d --restart unless-stopped mongo:4.1.13-bionic
         docker run --name elastic -p 9200:9200 -p 9300:9300 -m 1024M -d -e "discovery.type=single-node" --restart unless-stopped docker.elastic.co/elasticsearch/elasticsearch:6.2.3
         docker run --name logstash -d -p 5000:5000 -p 9600:9600 -v ~/logstash:/usr/share/logstash/pipeline --link elastic:elasticsearch --restart unless-stopped docker.elastic.co/logstash/logstash:6.2.3
         docker run --name kibana -p 5601:5601 -m 1024M -d --link elastic:elasticsearch --restart unless-stopped docker.elastic.co/kibana/kibana:6.2.3
         docker run -d --net=kafka --name=zookeeper -m 512M -p 2181:2181 -e ZOOKEEPER_CLIENT_PORT=2181 -e ZOOKEEPER_TICK_TIME=2000 confluentinc/cp-zookeeper:4.1.3
         docker run -d --net=kafka --name=kafka -m 1024M -p 9092:9092 -e KAFKA_ZOOKEEPER_CONNECT=$DOCKERHOST:2181 -e KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://$DOCKERHOST:9092 -e KAFKA_BROKER_ID=1 -e KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1 confluentinc/cp-kafka:4.1.3
      
